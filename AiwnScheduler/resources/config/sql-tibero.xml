<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TiberoDB">

	<!-- select -->
	<select id="tibero_db_conn_check" resultType="Integer">
        select 1 from DUAL
	</select>



	<select id="check_final_date" resultType="String" parameterType="java.util.Map">
      select * from (
        select * from (
			select * from (
					select TO_CHAR(UPDT_DT, 'YYYY-MM-DD') AS UPDT_DT
						from
						<choose>
							<when test="chkTablenm=='vw_qw_emphs_manage_area'">IF_VW_QW_EMPHS_MANAGE_AREA_TEST</when>
							<when test="chkTablenm=='vw_qw_wqmsm'">IF_VW_QW_WQMSM_TEST</when>
						</choose>
						where	1=1
							<if test="SelectFromDt != null">
								<!-- 설정일을 기준으로 가장최신 데이터 부터 데이터를 조회 할 수 있도록 함 -->
								and UPDT_DT  >= to_date(#{SelectFromDt},'YYYY-MM-DD')
							</if>
							<if test="SelectEndDt != null">
								and to_date(#{SelectEndDt},'YYYY-MM-DD')  >= UPDT_DT
							</if>
						order by UPDT_DT desc
				)A WHERE rownum = 1
				union
			select '2023-01-01' as UPDT_DT FROM DUAL
		) B order by UPDT_DT desc
	)C WHERE rownum = 1

	</select>


	<insert id="insert_vw_qw_wqmsm_test" parameterType="mone.db.dto.TiberoResDTO$vw_qw_wqmsm">

		 MERGE INTO IF_VW_QW_WQMSM_TEST
			USING DUAL
			ON ( 	MESURE_INFO_NO            = #{mesureInfoNo}
					AND FCLTS_NO              = #{fcltsNo}
					AND INSPCT_DE             = #{inspctDe}
					AND INSPCT_IEM_CD         = #{inspctIemCd}
				)
			WHEN MATCHED THEN
				UPDATE
					SET
					     FCLTY_NM               = #{fcltyNm}
					    ,FCLTS_ADDR             = #{fcltsAddr}
					    ,INSPCT_SE_CD           = #{inspctSeCd}
						,INSPCT_SE_NM           = #{inspctSeNm}
						,INSPCT_ENGN_CD         = #{inspctEngnCd}
						,INSPCT_ENGN_NM         = #{inspctEngnNm}
						,WTQLT_STDR_DE          = #{wtqltStdrDe}
						,INSPCT_PNTTM_CD        = #{inspctPnttmCd}
						,INSPCT_PNTTM_NM        = #{inspctPnttmNm}
						,INSPCT_MN              = #{inspctMn}
						,INSPCT_ODR             = #{inspctOdr}
						,PICK_DE                = #{pickDe}
						,INSPCT_IEM_CO          = #{inspctIemCo}
						,LEGALDONG_CD           = #{legaldongCd}
						,LEGALDONG_NM           = #{legaldongNm}
						,MESURE_SPOT_DETAIL_ADDR= #{mesureSpotDetailAddr}
						,RN_CD                  = #{rnCd}
						,RN_ADDR                = #{rnAddr}
						,GNRL_ENLF_SE_CD        = #{gnrlEnlfSeCd}
						,GNRL_ENLF_SE_NM        = #{gnrlEnlfSeNm}
						,WSP_CRSE_CD            = #{wspCrseCd}
						,WSP_CRSE_NM            = #{wspCrseNm}
						,DELETE_YN              = #{deleteYn}
						,DELETE_NM              = #{deleteNm}
						,WATSRC_SE_CD           = #{watsrcSeCd}
						,WATSRC_SE_NM           = #{watsrcSeNm}
						,WSP_MTHD_CD            = #{wspMthdCd}
						,WSP_MTHD_NM            = #{wspMthdNm}
						,PLANT_CD               = #{plantCd}
						,PLANT_NM               = #{plantNm}
						,LAY_CD                 = #{layCd}
						,LAY_NM                 = #{layNm}
						,FCT_SE_CD              = #{fctSeCd}
						,FCT_SE_NM              = #{fctSeNm}
						,INPUT_DT               = #{inputDt}
						,UPDT_DT                = #{updtDt}
						,WUB_CD                 = #{wubCd}
						,WUB_NM                 = #{wubNm}
						,CNFIRM_SE_CD           = #{cnfirmSeCd}
						,CNFIRM_SE_NM           = #{cnfirmSeNm}
						,EMPHS_MANAGE_AREA_CD   = #{emphsManageAreaCd}
						,EMPHS_MANAGE_AREA_NM   = #{emphsManageAreaNm}
						,GRDCT_PBLICTE_DE       = #{grdctPblicteDe}
						,INSPCT_IEM_NM          = #{inspctIemNm}
						,STDR_1_VAL             = #{stdr1Val}
						,STDR_2_VAL             = #{stdr2Val}
						,DCMLPOINT_VAL          = #{dcmlpointVal}
						,EXCS_NM                = #{excsNm}
						,EXCS_CAUSE_CD          = #{excsCauseCd}
						,EXCS_CAUSE_NM          = #{excsCauseNm}
						,EXCS_CAUSE_CN          = #{excsCauseCn}
						,MANAGT_CN              = #{managtCn}
						,MESURE_VAL             = #{mesureVal}
						,DETAIL_INPUT_DT        = #{detailInputDt}
						,DETAIL_UPDT_DT         = #{detailUpdtDt}
						,MANAGT_COMPT_DE        = #{managtComptDe}
						,MANAGT_STTUS_CD        = #{managtSttusCd}
						,MANAGT_STTUS_NM        = #{managtSttusNm}
						,INHBTNT_NOTICE_YN      = #{inhbtntNoticeYn}
						,INHBTNT_NOTICE_NM		= #{inhbtntNoticeNm}
						,INSPCT_IEM_ALIAS		= #{inspctIemAlias}
						,STDR_1_UNIT_NM			= #{stdr1UnitNm}
						,STDR_2_UNIT_NM			= #{stdr2UnitNm}
			WHEN NOT MATCHED THEN
				INSERT (
				     MESURE_INFO_NO
					,FCLTS_NO
					,FCLTY_NM
					,FCLTS_ADDR
					,INSPCT_DE
					,INSPCT_SE_CD
					,INSPCT_SE_NM
					,INSPCT_ENGN_CD
					,INSPCT_ENGN_NM
					,WTQLT_STDR_DE
					,INSPCT_PNTTM_CD
					,INSPCT_PNTTM_NM
					,INSPCT_MN
					,INSPCT_ODR
					,PICK_DE
					,INSPCT_IEM_CO
					,LEGALDONG_CD
					,LEGALDONG_NM
					,MESURE_SPOT_DETAIL_ADDR
					,RN_CD
					,RN_ADDR
					,GNRL_ENLF_SE_CD
					,GNRL_ENLF_SE_NM
					,WSP_CRSE_CD
					,WSP_CRSE_NM
					,DELETE_YN
					,DELETE_NM
					,WATSRC_SE_CD
					,WATSRC_SE_NM
					,WSP_MTHD_CD
					,WSP_MTHD_NM
					,PLANT_CD
					,PLANT_NM
					,LAY_CD
					,LAY_NM
					,FCT_SE_CD
					,FCT_SE_NM
					,INPUT_DT
					,UPDT_DT
					,WUB_CD
					,WUB_NM
					,CNFIRM_SE_CD
					,CNFIRM_SE_NM
					,EMPHS_MANAGE_AREA_CD
					,EMPHS_MANAGE_AREA_NM
					,GRDCT_PBLICTE_DE
					,INSPCT_IEM_CD
					,INSPCT_IEM_NM
					,STDR_1_VAL
					,STDR_2_VAL
					,DCMLPOINT_VAL
					,EXCS_NM
					,EXCS_CAUSE_CD
					,EXCS_CAUSE_NM
					,EXCS_CAUSE_CN
					,MANAGT_CN
					,MESURE_VAL
					,DETAIL_INPUT_DT
					,DETAIL_UPDT_DT
					,MANAGT_COMPT_DE
					,MANAGT_STTUS_CD
					,MANAGT_STTUS_NM
					,INHBTNT_NOTICE_YN
					,INHBTNT_NOTICE_NM
					,INSPCT_IEM_ALIAS
					,STDR_1_UNIT_NM
					,STDR_2_UNIT_NM
				)
				VALUES (
				     #{mesureInfoNo}
					,#{fcltsNo}
					,#{fcltyNm}
					,#{fcltsAddr}
					,#{inspctDe}
					,#{inspctSeCd}
					,#{inspctSeNm}
					,#{inspctEngnCd}
					,#{inspctEngnNm}
					,#{wtqltStdrDe}
					,#{inspctPnttmCd}
					,#{inspctPnttmNm}
					,#{inspctMn}
					,#{inspctOdr}
					,#{pickDe}
					,#{inspctIemCo}
					,#{legaldongCd}
					,#{legaldongNm}
					,#{mesureSpotDetailAddr}
					,#{rnCd}
					,#{rnAddr}
					,#{gnrlEnlfSeCd}
					,#{gnrlEnlfSeNm}
					,#{wspCrseCd}
					,#{wspCrseNm}
					,#{deleteYn}
					,#{deleteNm}
					,#{watsrcSeCd}
					,#{watsrcSeNm}
					,#{wspMthdCd}
					,#{wspMthdNm}
					,#{plantCd}
					,#{plantNm}
					,#{layCd}
					,#{layNm}
					,#{fctSeCd}
					,#{fctSeNm}
					,#{inputDt}
					,#{updtDt}
					,#{wubCd}
					,#{wubNm}
					,#{cnfirmSeCd}
					,#{cnfirmSeNm}
					,#{emphsManageAreaCd}
					,#{emphsManageAreaNm}
					,#{grdctPblicteDe}
					,#{inspctIemCd}
					,#{inspctIemNm}
					,#{stdr1Val}
					,#{stdr2Val}
					,#{dcmlpointVal}
					,#{excsNm}
					,#{excsCauseCd}
					,#{excsCauseNm}
					,#{excsCauseCn}
					,#{managtCn}
					,#{mesureVal}
					,#{detailInputDt}
					,#{detailUpdtDt}
					,#{managtComptDe}
					,#{managtSttusCd}
					,#{managtSttusNm}
					,#{inhbtntNoticeYn}
					,#{inhbtntNoticeNm}
					,#{inspctIemAlias}
					,#{stdr1UnitNm}
					,#{stdr2UnitNm}
				)
	</insert>

	<insert id="insert_vw_qw_emphs_manage_area_test" parameterType="mone.db.dto.TiberoResDTO$vw_qw_emphs_manage_area">

		 MERGE INTO IF_VW_QW_EMPHS_MANAGE_AREA_TEST
			USING DUAL
			ON (
		 					EMPHS_MANAGE_AREA_CD       = #{emphsManageAreaCd}
						AND EMPHS_MANAGE_AREA_NM       = #{emphsManageAreaNm}
						AND WUB_CD                     = #{wubCd}
						AND WUB_NM                     = #{wubNm}
						AND APPN_DE                    = #{appnDe}
						AND INSPCT_CO                  = #{inspctCo}
						AND INPUT_DT                   = to_date(#{inputDt}, 'YYYY-MM-DD')
				)
			WHEN MATCHED THEN
				UPDATE
					SET
							 ABL_DE                     = #{ablDe}
							,USE_YN                     = #{useYn}
							,USE_CD_NM                  = #{useCdNm}
							<if test="updtDt!=''">
							,UPDT_DT                    = to_date(#{updtDt}, 'YYYY-MM-DD')
							</if>
							,RM                         = #{rm}
							,CHANGE_YM                  = #{changeYm}
							,DETAIL_MAP_ATCHMNFL_NO     = to_number(#{detailMapAtchmnflNo})
							,SPOT_PHOTO_ATCHMNFL_NO     = to_number(#{spotPhotoAtchmnflNo})
							,LEGALDONG_CD               = #{legaldongCd}
							,LEGALDONG_ADDR             = #{legaldongAddr}
							,RN_CD                      = #{rnCd}
							,RN_ADDR                    = #{rnAddr}
							,POPSRV                     = #{popsrv}
							,INSPCT_WQY_MDAT_PRVONSH    = #{inspctWqyMdatPrvonsh}
							,DETAIL_CHANGE_YM           = to_number(#{detailChangeYm})
							,STD_CO						= #{stdCo}
			WHEN NOT MATCHED THEN
				INSERT (
							 EMPHS_MANAGE_AREA_CD
							,EMPHS_MANAGE_AREA_NM
							,WUB_CD
							,WUB_NM
							,APPN_DE
							,ABL_DE
							,USE_YN
							,USE_CD_NM
							,INPUT_DT
							<if test="updtDt!=''">
							,UPDT_DT
							</if>
							,RM
							,CHANGE_YM
							,DETAIL_MAP_ATCHMNFL_NO
							,SPOT_PHOTO_ATCHMNFL_NO
							,LEGALDONG_CD
							,LEGALDONG_ADDR
							,RN_CD
							,RN_ADDR
							,POPSRV
							,INSPCT_CO
							,INSPCT_WQY_MDAT_PRVONSH
							,DETAIL_CHANGE_YM
							,STD_CO
				)
				VALUES (
							 #{emphsManageAreaCd}
							,#{emphsManageAreaNm}
							,#{wubCd}
							,#{wubNm}
							,#{appnDe}
							,#{ablDe}
							,#{useYn}
							,#{useCdNm}
							,to_date(#{inputDt}, 'YYYY-MM-DD')
							<if test="updtDt!=''">
							,to_date(#{updtDt}, 'YYYY-MM-DD')
							</if>
							,#{rm}
							,#{changeYm}
							,to_number(#{detailMapAtchmnflNo})
							,to_number(#{spotPhotoAtchmnflNo})
							,#{legaldongCd}
							,#{legaldongAddr}
							,#{rnCd}
							,#{rnAddr}
							,#{popsrv}
							,#{inspctCo}
							,#{inspctWqyMdatPrvonsh}
							,to_number(#{detailChangeYm})
							,#{stdCo}
				)
	</insert>


	<select id="check_ansimApi_final_date" resultType="String" parameterType="java.util.Map">
      select * from (
        select * from (
			select * from (
					select SUBSTRING(RQSTDT,0,8) AS RQSTDT
						from	IF_COLT_ANSIM_API
						where	1=1
							<choose>
								<when test="chkTypeNm == 'SAFETYCNFIRM2' ">
									and DATASET      = 'SAFETYCNFIRM2'
								</when>
								<when test="chkTypeNm == 'INSDHOUSPIPNGDGNSSCLNSG2' ">
									and DATASET      = 'INSDHOUSPIPNGDGNSSCLNSG2'
								</when>
							</choose>
							<if test="SelectFromDt != null">
								<!-- 설정일을 기준으로 가장최신 데이터 부터 데이터를 조회 할 수 있도록 함 -->
								and RQSTDT  >= #{SelectFromDt} || '000000'
							</if>
							<if test="SelectEndDt != null">
								and #{SelectEndDt} || '235959'  >= RQSTDT
							</if>
						order by RQSTDT desc
				)A WHERE rownum = 1
				union
			select '20230101' as RQSTDT FROM DUAL
		) B order by RQSTDT desc
	)C WHERE rownum = 1

	</select>



	<insert id="insert_insdhouspipngdgnssclnsg2" parameterType="mone.db.dto.AnsimApiResDTO">
				MERGE INTO IF_COLT_ANSIM_API
				USING DUAL
				ON (		RQSTDT       = #{rqstdt}
					AND  	DATASET      = 'INSDHOUSPIPNGDGNSSCLNSG2')
				WHEN MATCHED THEN
					UPDATE
						SET
							 FNCTLCNM     = #{fnctlcnm}
							,INSPCTDIVNM  = #{inspctdivnm}
							,PRCSSTATNM   = #{prcsstatnm}
							,RSTNM        = #{rstnm}
							,CSTMRNO      = #{cstmrno}
							,VISITINSPCTDT= #{visitinspctdt}
				WHEN NOT MATCHED THEN
					INSERT (
							 DATASET
							,FNCTLCNM
							,INSPCTDIVNM
							,PRCSSTATNM
							,RSTNM
							,CSTMRNO
							,VISITINSPCTDT
							,RQSTDT
					)
					VALUES (
							 'INSDHOUSPIPNGDGNSSCLNSG2'
							,#{fnctlcnm}
							,#{inspctdivnm}
							,#{prcsstatnm}
							,#{rstnm}
							,#{cstmrno}
							,#{visitinspctdt}
							,#{rqstdt}
					)

		</insert>

		<insert id="insert_safetycnfirm2" parameterType="kw.lws.webservice.WsLwsWaterNowVo">
				MERGE INTO IF_COLT_ANSIM_API
				USING DUAL
				ON (		RQSTDT       = #{rqstdt}
					AND  	DATASET      = 'SAFETYCNFIRM2')
				WHEN MATCHED THEN
					UPDATE
						SET  FNCTLCNM     = #{fnctlcnm}
							,INSPCTDIVNM  = #{inspctdivnm}
							,PRCSSTATNM   = #{prcsstatnm}
							,RSTNM        = #{rstnm}
							,CSTMRNO      = #{cstmrno}
							,VISITINSPCTDT= #{visitinspctdt}
				WHEN NOT MATCHED THEN
					INSERT (
							 DATASET
							,FNCTLCNM
							,INSPCTDIVNM
							,PRCSSTATNM
							,RSTNM
							,CSTMRNO
							,VISITINSPCTDT
							,RQSTDT
					)
					VALUES (
							 'SAFETYCNFIRM2'
							,#{fnctlcnm}
							,#{inspctdivnm}
							,#{prcsstatnm}
							,#{rstnm}
							,#{cstmrno}
							,#{visitinspctdt}
							,#{rqstdt}
					)

		</insert>

</mapper>
